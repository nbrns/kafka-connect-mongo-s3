version: '3.8'
# TODO: Pin versions
services:
  connect:
    image: confluentinc/cp-kafka-connect:latest
    ports:
      - "8083:8083"
    volumes:
      - "./connectors:/usr/local/share/kafka/plugins"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:29092"
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: connect-cluster
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_AUTO_CREATE_TOPICS_ENABLE: "true"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_PLUGIN_PATH: "/usr/local/share/kafka/plugins"

  mongo:
    image: mongo:6
    restart: unless-stopped
    ports:
      - "27017:27017"
    command: --replSet rs0 --oplogSize 128

  mongo-setup:
    image: mongo:6
    volumes:
      - ./mongo/config-replica.js:/config-replica.js
    container_name: mongo-setup
    depends_on:
      - mongo
    entrypoint:
      [
        "bash",
        "-c",
        "sleep 10 && mongosh --host mongo:27017 config-replica.js && sleep 10",
      ]
    restart: "no"

  kafka:
    image: docker.redpanda.com/vectorized/redpanda:v22.3.12
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --node-id 0
      - --kafka-addr PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr PLAINTEXT://kafka:29092,OUTSIDE://localhost:9092
      - --pandaproxy-addr 0.0.0.0:8082
      - --advertise-pandaproxy-addr localhost:8082
    ports:
      - "8081:8081"
      - "8082:8082"
      - "9092:9092"
      - "9644:9644"
      - "29092:29092"

  console:
    image: docker.redpanda.com/vectorized/console:v2.1.1
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka:29092"]
          schemaRegistry:
            enabled: true
            urls: ["http://kafka:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://kafka:9644"]
        connect:
          enabled: true
          clusters:
            - name: local-connect-cluster
              url: http://connect:8083
    ports:
      - "8090:8080"
    depends_on:
      - kafka

  minio:
    image: minio/minio:RELEASE.2022-12-07T00-56-37Z
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ACCESS_KEY: password123
      MINIO_SECRET_KEY: password123
    command: server /data --console-address ":9001"